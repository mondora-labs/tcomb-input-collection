{
  "reportTitle": "tcomb-input-collection",
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2015-04-10T17:45:31.445Z",
    "end": "2015-04-10T17:45:31.529Z",
    "duration": 84,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "SimpleStringList",
        "suites": [],
        "tests": [
          {
            "title": "should contain a text input",
            "fullTitle": "SimpleStringList should contain a text input",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> input = u.findRenderedDOMComponentWithTag(\n    u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}})),\n    <span class=\"hljs-string\">\"input\"</span>\n);\ninput.props.type.should.equal(<span class=\"hljs-string\">\"text\"</span>);",
            "isRoot": false,
            "uuid": "02e9a8fa-d21f-47ad-93b0-b78c3e2e68b0",
            "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
            "skipped": false
          },
          {
            "title": "should contain a button",
            "fullTitle": "SimpleStringList should contain a button",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "u.findRenderedDOMComponentWithTag(\n    u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}})),\n    <span class=\"hljs-string\">\"button\"</span>\n);",
            "isRoot": false,
            "uuid": "093b6663-c760-4cca-acc2-e03663e9ec0b",
            "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
            "skipped": false
          },
          {
            "title": "should add strings on button click",
            "fullTitle": "SimpleStringList should add strings on button click",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> onChange = sinon.spy();\n<span class=\"hljs-keyword\">var</span> stringList = u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}, onChange: onChange}));\nstringList.getDOMNode().innerHTML.should.not.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\n<span class=\"hljs-keyword\">var</span> input = u.findRenderedDOMComponentWithTag(stringList, <span class=\"hljs-string\">\"input\"</span>).getDOMNode();\n<span class=\"hljs-keyword\">var</span> button = u.findRenderedDOMComponentWithTag(stringList, <span class=\"hljs-string\">\"button\"</span>).getDOMNode();\nReact.addons.TestUtils.Simulate.change(input, {target: {value: <span class=\"hljs-string\">\"My string\"</span>}});\ninput.value.should.equal(<span class=\"hljs-string\">\"My string\"</span>);\nReact.addons.TestUtils.Simulate.click(button);\nonChange.called.should.equal(<span class=\"hljs-literal\">true</span>);\nstringList.getDOMNode().innerHTML.should.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\ninput.value.should.equal(<span class=\"hljs-string\">\"\"</span>);",
            "isRoot": false,
            "uuid": "8fd781b6-4e5d-45b4-979e-fb55913091c5",
            "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
            "skipped": false
          },
          {
            "title": "should add strings on enter",
            "fullTitle": "SimpleStringList should add strings on enter",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> onChange = sinon.spy();\n<span class=\"hljs-keyword\">var</span> stringList = u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}, onChange: onChange}));\nstringList.getDOMNode().innerHTML.should.not.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\n<span class=\"hljs-keyword\">var</span> input = u.findRenderedDOMComponentWithTag(stringList, <span class=\"hljs-string\">\"input\"</span>).getDOMNode();\nReact.addons.TestUtils.Simulate.change(input, {target: {value: <span class=\"hljs-string\">\"My string\"</span>}});\ninput.value.should.equal(<span class=\"hljs-string\">\"My string\"</span>);\nReact.addons.TestUtils.Simulate.keyPress(input, {key: <span class=\"hljs-string\">\"Enter\"</span>});\nonChange.called.should.equal(<span class=\"hljs-literal\">true</span>);\nstringList.getDOMNode().innerHTML.should.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\ninput.value.should.equal(<span class=\"hljs-string\">\"\"</span>);",
            "isRoot": false,
            "uuid": "efd4f5a1-6ce1-40cb-a9ad-4e6b3aaf89a7",
            "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
            "skipped": false
          },
          {
            "title": "should remove strings",
            "fullTitle": "SimpleStringList should remove strings",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> onChange = sinon.spy();\n<span class=\"hljs-keyword\">var</span> stringList = u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}, onChange: onChange, value: [<span class=\"hljs-string\">\"My string\"</span>]}));\nstringList.getDOMNode().innerHTML.should.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\n<span class=\"hljs-keyword\">var</span> strings = u.findAllInRenderedTree(stringList, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(node)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"hljs-keyword\">typeof</span> node.props.onClick === <span class=\"hljs-string\">\"function\"</span> &amp;&amp;\n        node.props.type !== <span class=\"hljs-string\">\"button\"</span>\n    );\n});\n<span class=\"hljs-keyword\">var</span> string = strings[<span class=\"hljs-number\">0</span>].getDOMNode();\nReact.addons.TestUtils.Simulate.click(string);\nonChange.called.should.equal(<span class=\"hljs-literal\">true</span>);\nstringList.getDOMNode().innerHTML.should.not.match(reg(<span class=\"hljs-string\">\"My string\"</span>));",
            "isRoot": false,
            "uuid": "9ce06390-d442-414a-a827-e73e9be9ca45",
            "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/unit/inputs/simple-string-list.jsx",
        "uuid": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
        "fullFile": "/Users/pscanf/mondora/tcomb-input-collection/tests/unit/inputs/simple-string-list.jsx",
        "passes": [
          "[Circular ~.suites.suites.0.tests.0]",
          "[Circular ~.suites.suites.0.tests.1]",
          "[Circular ~.suites.suites.0.tests.2]",
          "[Circular ~.suites.suites.0.tests.3]",
          "[Circular ~.suites.suites.0.tests.4]"
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 67
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "2c8a3691-81d2-4b46-9a34-ad4229c49b07",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should contain a text input",
      "fullTitle": "SimpleStringList should contain a text input",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> input = u.findRenderedDOMComponentWithTag(\n    u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}})),\n    <span class=\"hljs-string\">\"input\"</span>\n);\ninput.props.type.should.equal(<span class=\"hljs-string\">\"text\"</span>);",
      "isRoot": false,
      "uuid": "f1161a4a-a07c-4f06-912a-35cbc64b86d0",
      "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
      "skipped": false
    },
    {
      "title": "should contain a button",
      "fullTitle": "SimpleStringList should contain a button",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "u.findRenderedDOMComponentWithTag(\n    u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}})),\n    <span class=\"hljs-string\">\"button\"</span>\n);",
      "isRoot": false,
      "uuid": "398c7b75-1fbe-4856-90b9-627c8fa1d455",
      "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
      "skipped": false
    },
    {
      "title": "should add strings on button click",
      "fullTitle": "SimpleStringList should add strings on button click",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> onChange = sinon.spy();\n<span class=\"hljs-keyword\">var</span> stringList = u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}, onChange: onChange}));\nstringList.getDOMNode().innerHTML.should.not.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\n<span class=\"hljs-keyword\">var</span> input = u.findRenderedDOMComponentWithTag(stringList, <span class=\"hljs-string\">\"input\"</span>).getDOMNode();\n<span class=\"hljs-keyword\">var</span> button = u.findRenderedDOMComponentWithTag(stringList, <span class=\"hljs-string\">\"button\"</span>).getDOMNode();\nReact.addons.TestUtils.Simulate.change(input, {target: {value: <span class=\"hljs-string\">\"My string\"</span>}});\ninput.value.should.equal(<span class=\"hljs-string\">\"My string\"</span>);\nReact.addons.TestUtils.Simulate.click(button);\nonChange.called.should.equal(<span class=\"hljs-literal\">true</span>);\nstringList.getDOMNode().innerHTML.should.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\ninput.value.should.equal(<span class=\"hljs-string\">\"\"</span>);",
      "isRoot": false,
      "uuid": "781c50fb-5b88-4cf3-a22d-6b031d0a1afd",
      "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
      "skipped": false
    },
    {
      "title": "should add strings on enter",
      "fullTitle": "SimpleStringList should add strings on enter",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> onChange = sinon.spy();\n<span class=\"hljs-keyword\">var</span> stringList = u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}, onChange: onChange}));\nstringList.getDOMNode().innerHTML.should.not.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\n<span class=\"hljs-keyword\">var</span> input = u.findRenderedDOMComponentWithTag(stringList, <span class=\"hljs-string\">\"input\"</span>).getDOMNode();\nReact.addons.TestUtils.Simulate.change(input, {target: {value: <span class=\"hljs-string\">\"My string\"</span>}});\ninput.value.should.equal(<span class=\"hljs-string\">\"My string\"</span>);\nReact.addons.TestUtils.Simulate.keyPress(input, {key: <span class=\"hljs-string\">\"Enter\"</span>});\nonChange.called.should.equal(<span class=\"hljs-literal\">true</span>);\nstringList.getDOMNode().innerHTML.should.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\ninput.value.should.equal(<span class=\"hljs-string\">\"\"</span>);",
      "isRoot": false,
      "uuid": "7f8f1cde-cb50-495d-b5a4-b9b15057420d",
      "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
      "skipped": false
    },
    {
      "title": "should remove strings",
      "fullTitle": "SimpleStringList should remove strings",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> onChange = sinon.spy();\n<span class=\"hljs-keyword\">var</span> stringList = u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}, onChange: onChange, value: [<span class=\"hljs-string\">\"My string\"</span>]}));\nstringList.getDOMNode().innerHTML.should.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\n<span class=\"hljs-keyword\">var</span> strings = u.findAllInRenderedTree(stringList, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(node)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"hljs-keyword\">typeof</span> node.props.onClick === <span class=\"hljs-string\">\"function\"</span> &amp;&amp;\n        node.props.type !== <span class=\"hljs-string\">\"button\"</span>\n    );\n});\n<span class=\"hljs-keyword\">var</span> string = strings[<span class=\"hljs-number\">0</span>].getDOMNode();\nReact.addons.TestUtils.Simulate.click(string);\nonChange.called.should.equal(<span class=\"hljs-literal\">true</span>);\nstringList.getDOMNode().innerHTML.should.not.match(reg(<span class=\"hljs-string\">\"My string\"</span>));",
      "isRoot": false,
      "uuid": "712c41ef-9afb-4397-bbeb-fc942039fb15",
      "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
      "skipped": false
    }
  ],
  "allHooks": [],
  "allPending": [],
  "allPasses": [
    {
      "title": "should contain a text input",
      "fullTitle": "SimpleStringList should contain a text input",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> input = u.findRenderedDOMComponentWithTag(\n    u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}})),\n    <span class=\"hljs-string\">\"input\"</span>\n);\ninput.props.type.should.equal(<span class=\"hljs-string\">\"text\"</span>);",
      "isRoot": false,
      "uuid": "d2f2d73c-5bd8-4ef4-8c76-002c38bf3f2b",
      "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
      "skipped": false
    },
    {
      "title": "should contain a button",
      "fullTitle": "SimpleStringList should contain a button",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "u.findRenderedDOMComponentWithTag(\n    u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}})),\n    <span class=\"hljs-string\">\"button\"</span>\n);",
      "isRoot": false,
      "uuid": "b3302ddb-4915-4b87-aae6-a6797b2d88ce",
      "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
      "skipped": false
    },
    {
      "title": "should add strings on button click",
      "fullTitle": "SimpleStringList should add strings on button click",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> onChange = sinon.spy();\n<span class=\"hljs-keyword\">var</span> stringList = u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}, onChange: onChange}));\nstringList.getDOMNode().innerHTML.should.not.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\n<span class=\"hljs-keyword\">var</span> input = u.findRenderedDOMComponentWithTag(stringList, <span class=\"hljs-string\">\"input\"</span>).getDOMNode();\n<span class=\"hljs-keyword\">var</span> button = u.findRenderedDOMComponentWithTag(stringList, <span class=\"hljs-string\">\"button\"</span>).getDOMNode();\nReact.addons.TestUtils.Simulate.change(input, {target: {value: <span class=\"hljs-string\">\"My string\"</span>}});\ninput.value.should.equal(<span class=\"hljs-string\">\"My string\"</span>);\nReact.addons.TestUtils.Simulate.click(button);\nonChange.called.should.equal(<span class=\"hljs-literal\">true</span>);\nstringList.getDOMNode().innerHTML.should.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\ninput.value.should.equal(<span class=\"hljs-string\">\"\"</span>);",
      "isRoot": false,
      "uuid": "6d59e70f-5d17-4438-9717-f8941daafde1",
      "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
      "skipped": false
    },
    {
      "title": "should add strings on enter",
      "fullTitle": "SimpleStringList should add strings on enter",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> onChange = sinon.spy();\n<span class=\"hljs-keyword\">var</span> stringList = u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}, onChange: onChange}));\nstringList.getDOMNode().innerHTML.should.not.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\n<span class=\"hljs-keyword\">var</span> input = u.findRenderedDOMComponentWithTag(stringList, <span class=\"hljs-string\">\"input\"</span>).getDOMNode();\nReact.addons.TestUtils.Simulate.change(input, {target: {value: <span class=\"hljs-string\">\"My string\"</span>}});\ninput.value.should.equal(<span class=\"hljs-string\">\"My string\"</span>);\nReact.addons.TestUtils.Simulate.keyPress(input, {key: <span class=\"hljs-string\">\"Enter\"</span>});\nonChange.called.should.equal(<span class=\"hljs-literal\">true</span>);\nstringList.getDOMNode().innerHTML.should.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\ninput.value.should.equal(<span class=\"hljs-string\">\"\"</span>);",
      "isRoot": false,
      "uuid": "3323b171-e17f-4a7e-a417-3338e705a43a",
      "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
      "skipped": false
    },
    {
      "title": "should remove strings",
      "fullTitle": "SimpleStringList should remove strings",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> onChange = sinon.spy();\n<span class=\"hljs-keyword\">var</span> stringList = u.renderIntoDocument(React.createElement(SimpleStringList, {ctx: {}, onChange: onChange, value: [<span class=\"hljs-string\">\"My string\"</span>]}));\nstringList.getDOMNode().innerHTML.should.match(reg(<span class=\"hljs-string\">\"My string\"</span>));\n<span class=\"hljs-keyword\">var</span> strings = u.findAllInRenderedTree(stringList, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(node)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"hljs-keyword\">typeof</span> node.props.onClick === <span class=\"hljs-string\">\"function\"</span> &amp;&amp;\n        node.props.type !== <span class=\"hljs-string\">\"button\"</span>\n    );\n});\n<span class=\"hljs-keyword\">var</span> string = strings[<span class=\"hljs-number\">0</span>].getDOMNode();\nReact.addons.TestUtils.Simulate.click(string);\nonChange.called.should.equal(<span class=\"hljs-literal\">true</span>);\nstringList.getDOMNode().innerHTML.should.not.match(reg(<span class=\"hljs-string\">\"My string\"</span>));",
      "isRoot": false,
      "uuid": "cd68ee19-694f-4648-afdd-f60612559f55",
      "parentUUID": "a1a2f2b8-b0b2-43a6-ada5-0bc101c36a22",
      "skipped": false
    }
  ],
  "allFailures": []
}